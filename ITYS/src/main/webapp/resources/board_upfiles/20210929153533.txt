BoardDao 쿼리문

**ArrayList<Board> selectTop3**
String query = "SELECT * "
				+ "FROM (SELECT ROWNUM RNUM, BOARD_NUM, BOARD_TITLE, BOARD_READCOUNT "
				+ "        FROM (SELECT * FROM BOARD "
				+ "                WHERE BOARD_LEVEL = 1 "
				+ "                ORDER BY BOARD_READCOUNT DESC)) "
				+ "WHERE RNUM >= 1 AND RNUM <= 3";

**selectBoard**
String query = "select * from board "
				+ "where board_num = ?";
pstmt.setInt(1, boardNum);

**updateReadCount**
String query = "update board set "
				+ "board_readcount = board_readcount + 1 "
				+ "where board_num = ?";
pstmt.setInt(1, boardNum);

**getListCount**
String query = "select count(*) from board";

**ArrayList<Board> selectList**
String query = "SELECT * "
				+ "FROM (SELECT ROWNUM RNUM, BOARD_NUM, BOARD_TITLE, BOARD_WRITER,  "
				+ "                BOARD_ORIGINAL_FILENAME, BOARD_RENAME_FILENAME,  "
				+ "                BOARD_DATE, BOARD_LEVEL, BOARD_REF, BOARD_REPLY_REF,  "
				+ "                BOARD_REPLY_SEQ, BOARD_READCOUNT, board_content "
				+ "        FROM (SELECT * FROM BOARD "
				+ "                ORDER BY BOARD_REF DESC, BOARD_REPLY_REF DESC, "
				+ "                          BOARD_LEVEL ASC, BOARD_REPLY_SEQ ASC)) "
				+ "WHERE RNUM >= ? AND RNUM <= ?";
pstmt.setInt(1, startRow);
pstmt.setInt(2, endRow);

**insertOriginBoard**
String query = "insert into board values ("
				+ "(select max(board_num) + 1 from board), "
				+ "?, ?, ?, ?, ?, sysdate, 1, "
				+ "(select max(board_num) + 1 from board), "
				+ "null, default, default)";
pstmt.setString(1, board.getBoardTitle());
pstmt.setString(2, board.getBoardWriter());
pstmt.setString(3, board.getBoardContent());
pstmt.setString(4, board.getBoardOriginalFilename());
pstmt.setString(5, board.getBoardRenameFilename());

**updateOrigin**
String query = "update board set "
				+ "board_title = ?, "
				+ "board_content = ?, "
				+ "board_original_filename = ?, "
				+ "board_rename_filename = ? "
				+ "where board_num = ?";
pstmt.setString(1, origin.getBoardTitle());
pstmt.setString(2, origin.getBoardContent());
pstmt.setString(3, origin.getBoardOriginalFilename());
pstmt.setString(4, origin.getBoardRenameFilename());
pstmt.setInt(5, origin.getBoardNum());

**updateReply**
String query = "update board set "
				+ "board_title = ?, "
				+ "board_content = ? "
				+ "where board_num = ?";
pstmt.setString(1, reply.getBoardTitle());
pstmt.setString(2, reply.getBoardContent());
pstmt.setInt(3, reply.getBoardNum());

**updateReplySeq**
String query = null;
		
		//새로 등록할 댓글이 원글의 댓글일 때
		if(reply.getBoardLevel() == 2) {
			query = "update board set "
				+ "board_reply_seq = board_reply_seq + 1 "
				+ "where board_ref = ? and board_level = ?";
		}
		
		//새로 등록할 댓글이 댓글의 댓글일 때
		if(reply.getBoardLevel() == 3) {
			query = "update board set "
					+ "board_reply_seq = board_reply_seq + 1 "
					+ "where board_ref = ? and board_level = ? "
					+ "and board_reply_ref = ?";
		}
pstmt.setInt(1, reply.getBoardRef());
pstmt.setInt(2, reply.getBoardLevel());

if(reply.getBoardLevel() == 3) {
				pstmt.setInt(3, reply.getBoardReplyRef());
			}

**insertReplyBoard**
String query = null;
		
		if(reply.getBoardLevel()  == 2) {
			query = "insert into board values ("
				+ "(select max(board_num) + 1 from board), "
				+ "?, ?, ?, null, null, sysdate, 2, ?, "
				+ "(select max(board_num) + 1 from board), "
				+ "?, default)";
		}		
		
		if(reply.getBoardLevel()  == 3) {
			query = "insert into board values ("
					+ "(select max(board_num) + 1 from board), "
					+ "?, ?, ?, null, null, sysdate, 3, ?, "
					+ "?, ?, default)";
		}
pstmt.setString(1, reply.getBoardTitle());
pstmt.setString(2, reply.getBoardWriter());
pstmt.setString(3, reply.getBoardContent());
pstmt.setInt(4, reply.getBoardRef());
			
			if(reply.getBoardLevel() == 2) {
				pstmt.setInt(5, reply.getBoardReplySeq());
			}
			
			if(reply.getBoardLevel() == 3) {
				pstmt.setInt(5, reply.getBoardReplyRef());
				pstmt.setInt(6, reply.getBoardReplySeq());
			}


**deleteBoard**
String query = "delete from board ";

if(boardLevel == 1) {
			//원글 삭제시에는 원글, 댓글, 대댓글 모두 삭제됨
			query += "where board_ref = ?";
		}
		
		if(boardLevel == 2) {
			//원글에 대한 댓글 삭제시, 대댓글 같이 삭제
			query += "where board_reply_ref = ?";
		}
		
		if(boardLevel == 3) {
			//대댓글은 자기글만 삭제
			query += "where board_num = ?";
		}

pstmt.setInt(1, boardNum);








